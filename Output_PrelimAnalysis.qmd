---
title: "Dissertation Prelim Analysis for MCLS 2023"
format: 
  html:
    fig-align: center
    fig-width: 8
    toc: true
    toc-expand: 4
    toc-location: left
    fontsize: 1em
editor: visual
execute:
  warning: false
---

```{r}
#| echo: false
library(labelled)
library(tidyverse)
library(gtsummary)
library(ggpubr)
library(psych)
```

https://joshm7.github.io/Output_PrelimAnalysis.html

# About the Participants

## Demographic Characteristics

XX signed the consent form but 33 so far has completed the study. The average age of the sample is XX.

```{r}
#| echo: false
setwd("/Users/joshmedrano/Library/CloudStorage/Box-Box/Dissertation/")
dat <- read.csv("demog_all.csv", header=TRUE) %>%
  select(2:20)

dat.2 <- dat %>%
  select(1:10) # 11-19 are all anxiety related questions

names(dat.2) <- c("id",
                  "gender",      
                "ethnic",      
                "race",   
                "educ",
                "highest_ed",  
                "math_classes",
                "major",    
                "minor",
                "professional"
                )
                
dat.2_metadata <- tribble(
  ~variable,           ~variable_label, 
  "id",            "ID",
  "gender",        "Which gender do you identify with?",
  "ethnic",        "Which ethnicity do you identify with?",
  "race",          "Which race do you identify with?",
  "educ",          "In which country did you receive most of your education?",
  "highest_ed",    "What is the highest level of education you have achieved?",
  "math_classes",  "How many math classes have you taken after high school?"   ,
  "major",         "If you are in a college, university or any postsecondary institution, what is your major or your field of study?",
  "minor",         "if you have a minor, what is your minor in?",
  "professional",  "Are you a working professional (not attending college or any postsecondary school)?"
  )

dat.2_labels <- dat.2_metadata |> 
  deframe()

dat.2 <- dat.2 |> 
  set_variable_labels(!!!dat.2_labels)

#
#dat.2_dictionary <- dat.2 |> 
#  generate_dictionary()
# dat.2_dictionary
theme_gtsummary_compact(set_theme = TRUE)
dat.2.tbl <- dat.2 |> 
  select(2:10) |> 
  tbl_summary() |> 
  bold_labels()
dat.2.tbl
```

## Math Anxiety

Participants completed the nine-question Abbreviated Math Anxiety Scale, along a Likert scale from 1 (*low anxiety*) to 5 (*high anxiety*). On average, the participants had low math anxiety (*Mean*=2.48).

```{r}
#| echo: false
dat_anxiety <- dat %>%
  select(id1, 11:19) 

names(dat_anxiety) <- c("id", 
                        "Having to use the tables in the back of a math book.",
                        "Thinking about an upcoming math test 1 day before." ,
                        "Watching a teacher work an algebraic equation on the blackboard.",
                        "Taking an examination in a math course.",
                        "Being given a homework assignment of many difficult problems that is due the next class meeting.",
                        "Listening to a lecture in math class.",                  
                        "Listening to another student explain a math formula.",
                        "Being given a “pop” quiz in math class.",
                        "Starting a new chapter in a math book." )

dat_anxiety_byParticipant <- dat_anxiety %>%
  pivot_longer(cols=2:10,names_to="question",values_to="resp") %>%
  mutate(resp = ifelse(resp=="Low anxiety",1,
                             ifelse(resp=="Some anxiety",2,
                                    ifelse(resp=="Moderate anxiety",3,
                                           ifelse(resp=="Quite a bit of anxiety",4,5))))) %>%
  group_by(id)%>%
  summarize(anxiety=mean(resp))

dat_anxiety_byParticipant <- as.data.frame(dat_anxiety_byParticipant)

dat_anxiety <- left_join(dat_anxiety, dat_anxiety_byParticipant)

anxiety_plot <- dat_anxiety %>%
  ggplot(aes(x=anxiety)) +
  geom_histogram(bins=5)
anxiety_plot
```

```{r}
#| echo: false
dat_anxiety <- dat %>%
  select(id1, 11:19) 

names(dat_anxiety) <- c("id", 
                        "Having to use the tables in the back of a math book.",                                            
                        "Thinking about an upcoming math test 1 day before." ,                                             
                        "Watching a teacher work an algebraic equation on the blackboard."      ,                          
                        "Taking an examination in a math course."                          ,                               
                        "Being given a homework assignment of many difficult problems that is due the next class meeting.",
                        "Listening to a lecture in math class."                                         ,                  
                        "Listening to another student explain a math formula."                          ,                  
                        "Being given a “pop” quiz in math class."                                     ,                    
                        "Starting a new chapter in a math book." )

dat_anxiety <- dat_anxiety %>%
  pivot_longer(cols=2:10,names_to="question",values_to="resp")

dat_anxiety$question <- factor(dat_anxiety$question)
dat_anxiety$resp <- factor(dat_anxiety$resp)
#levels(dat_anxiety$resp)
dat_anxiety$resp <- factor(dat_anxiety$resp, levels=c("Low anxiety",
                                                      "Some anxiety",
                                                      "Moderate anxiety",
                                                      "Quite a bit of anxiety",
                                                      "High anxiety"))
#levels(dat_anxiety$resp)

library(likert)

# #https://ladal.edu.au/surveys.html

dat_anxiety <- dat_anxiety %>%
  pivot_wider(names_from = "question",
              values_from = "resp") %>%
  as.data.frame()

plot(likert(dat_anxiety[,2:10]), ordered = T, wrap=40)
```

# Analytic Plan

After participants complete the demographic questionnaires, participants take both phonological and visual span tasks, from which load information is taken (80% for high difficulty and 99% for low difficulty for each type). Participants then complete the dual span tasks, with three blocks/task conditions: only neutral, all-spacing conditions, and all-spacing conditions with parentheses.

The final dataset consisted of participants' background characteristics, as well as accuracy and response times for arithmetic problems under working memory load (type and difficulty) and spacing conditions. Outliers are defined as more than three standard deviations above or below the mean; however, they will not be removed.

# Descriptive Statistics

From each of the 33 participants, RTs and accuracy for 180 trials (60 arithmetic problems, 3 task conditions) were gathered. In a longform dataset, there were 5940 rows. Data cleaning was then conducted:

-   45 trials (.8% of all trials) were removed due to no expressions being displayed during one block (all for one participant)
-   For those with incorrect answers, 646 RTs (10.8%) were removed (inserted NA).

RTs were converted to seconds (ms/1000) for the following analysis. Seven RTs were found to be outliers but were not removed; RTs were also logarithmically-transformed.

The mean for the RT variable (*n* = 5249 trials) is 2 seconds (median = 1.3s, standard deviation = 9.2s). The mean for the acc variable (*n* = 5895 trials) is 0.89 (med = 1.0, sd = 0.3s).

```{r}
#| echo: false
setwd("/Users/joshmedrano/Library/CloudStorage/Box-Box/Dissertation/")
dat <- read.csv("dual_all.csv", header=TRUE)
library(psych)

# set your n
n = 33
dat$load <- rep(rep(c("low","low","high","high"), each=30),n)

# make sure load column is properly done
dat <- dat %>%
  mutate(wmLoad = ifelse(wmLoad=="" & load=="low", "low_v",
                         ifelse(wmLoad=="" & load=="high", "high_v",wmLoad)))

# verify
# dat %>%
#   group_by(task,wmLoad, load)%>%
#   summarise(n=n())

# filter out expressions only
dat <- dat %>%
  filter(display=="expression") %>% # 5940 trials
  filter(expr!="") # 45 trials removed due to having no expression, .75%

# change rts from ms to s
dat <- dat %>%
  mutate(rt = rt/1000)

# make NA for RTs with incorrect answers
dat <- dat %>%
  mutate(rt=ifelse(acc==0,NA,rt)) 
# sum(is.na(dat$rt))  # 646 incorrect trials, 10.8%



# Descriptives ------------------------------------------------------------

# Math rt,acc for all conditions

# it looks like rt is very skewed (45.91 skew value), confirm with visualizations
rt_bxp <- ggplot(dat, aes(y=rt)) + #boxplot
  geom_boxplot() +
  ylab("rt (secs)")
rt_hist <- ggplot(dat, aes(x=rt)) + #histogram
  geom_histogram(bins=50) +
  xlab("rt (secs)")
rt_qq <- ggplot(dat, aes(sample=rt)) + #qqline
  stat_qq() + stat_qq_line()

rt_plots <- ggarrange(rt_bxp, rt_hist, rt_qq,
          labels = c("A", "B", "C"),
          ncol = 3, nrow = 1)
rt_plots

dat %>%
  select(rt,acc) %>%
  describe()


# log-transform
dat <- dat %>%
  mutate(log_rt=log(rt))

log_rt_bxp <- ggplot(dat, aes(y=log_rt)) + #boxplot
  geom_boxplot()
log_rt_hist <- ggplot(dat, aes(x=log_rt)) + #histogram
  geom_histogram(bins=50)
log_rt_qq <- ggplot(dat, aes(sample=log_rt)) + #qqline
  stat_qq() + stat_qq_line()

log_rt_plots <- ggarrange(log_rt_bxp, log_rt_hist, log_rt_qq,
          labels = c("A", "B", "C"),
          ncol =3, nrow = 1)
log_rt_plots

dat %>%
  select(log_rt,acc) %>% # log rt is much less skewed now!
  describe()

write.csv(dat, "dual_all_cleaned.csv")
```

# Inferential Statistics

To answer my research questions, I conducted analyses of variance (ANOVAs). My dependent measures were accuracy and response times for arithmetic problems with working memory load difficulty and type and spacing as factors. Post-hoc comparisons were conducted for significant interactions.

## RQ 1. To what extent does multi-operand arithmetic involve working memory?

To answer this question, I will conduct an ANOVA with 2 working memory load difficulties (high and low) x 2 types (phonological and visuospatial) as factors in the first dual-task condition. The working memory task will likely interfere with the arithmetic task with no differences in accuracy and response times between types and with lower accuracy and slower response times in high vs. low load.

### Main Effect of Load

```{r}
#| echo: false
# using dat

dat.1 <- dat %>%
  group_by(id1,load,wmLoad,task) %>%
  filter(display=="expression",
         task=="Arithmetic No Spacing") %>%
  mutate(wmLoad=ifelse(wmLoad=="low_p"|wmLoad=="high_p","p","v")) %>%
  summarize(log_rt=mean(log_rt, na.rm=TRUE),
            acc=mean(acc),
            rt=mean(rt, na.rm=TRUE))

a <- ggplot(dat.1, aes(x=load, y=rt)) + 
  geom_boxplot()
b <- ggplot(dat.1, aes(x=load, y=log(rt))) + 
  geom_boxplot()
c <- ggplot(dat.1, aes(x=load, y=acc)) + 
  geom_boxplot()


plots <- ggarrange(a, b, c,
          labels = c("A", "B", "C"),
          ncol =3, nrow = 1)
plots

dat.1 %>%
  select(load,rt,acc) %>%
  psych::describeBy(group="load")

```

### Main Effect of WM Type

```{r}
#| echo: false
a <- ggplot(dat.1, aes(x=wmLoad, y=rt)) + 
  geom_boxplot()
b <- ggplot(dat.1, aes(x=wmLoad, y=log(rt))) + 
  geom_boxplot()
c <- ggplot(dat.1, aes(x=wmLoad, y=acc)) + 
  geom_boxplot()


plots <- ggarrange(a, b, c,
          labels = c("A", "B", "C"),
          ncol =3, nrow = 1)
plots

dat.1 %>%
  select(wmLoad,rt,acc) %>%
  psych::describeBy(group="wmLoad")
```

```{r}
#| echo: true
dat.1$load <- factor(dat.1$load)
dat.1$wmLoad <- factor(dat.1$wmLoad)
dat.1$id1 <- factor(dat.1$id1)

aov.1 <- aov(rt~load + Error (id1/load), data=dat.1)
summary(aov.1)

aov.2 <- aov(log(rt)~load + Error (id1/load), data=dat.1)
summary(aov.2)

aov.3 <- aov(acc~load + Error (id1/load), data=dat.1)
summary(aov.3)

aov.1 <- aov(rt~wmLoad + Error (id1/wmLoad), data=dat.1)
summary(aov.1)

aov.2 <- aov(log(rt)~wmLoad + Error (id1/wmLoad), data=dat.1)
summary(aov.2)

aov.3 <- aov(acc~wmLoad + Error (id1/wmLoad), data=dat.1)
summary(aov.3)

```

### Interaction Effects

```{r}
aov.1 <- aov(rt~load*wmLoad + Error (id1/load*wmLoad), data=dat.1)
summary(aov.1)

aov.2 <- aov(log(rt)~load*wmLoad + Error (id1/load*wmLoad), data=dat.1)
summary(aov.2)

aov.3 <- aov(acc~load*wmLoad + Error (id1/load*wmLoad), data=dat.1)
summary(aov.3)
```

It looks like there is an interaction effect of `load*wmLoad` on `acc`.

```{r}
#| echo: false
a <- ggplot(dat.1, aes(x=load, y=acc, fill=wmLoad)) + 
  geom_boxplot()
a

a <- ggplot(dat.1, aes(x=load, y=acc, colour=wmLoad, group=wmLoad)) + 
  stat_summary(fun.y = mean, geom = "point") +
  stat_summary(fun.y = mean, geom = "line")
a

dat.1 %>%
  select(load,wmLoad,rt,acc) %>%
  psych::describeBy(group=c("load","wmLoad"))

dat.1.wide <- dat.1 %>%
  pivot_wider(names_from=c(wmLoad,load),
              values_from=c(rt,acc,log_rt),
              names_sep="_") 

a <- as.numeric(dat.1.wide$rt_p_high)
b <- as.numeric(dat.1.wide$rt_p_low)

c <- as.numeric(dat.1.wide$acc_p_high)
d <- as.numeric(dat.1.wide$acc_p_low)

cor(a,b) #.37; 
cor(c,d) #.68; 
```

### Effect Sizes

Effect sizes were computed to examine whether there is a meaningful difference in arithmetic performance when under low vs. high working memory demand (or whether working memory manipulation affected arithmetic expressions).

The RTs of the low (M=2.28s, SD=1.54s) and high loads (M=1.85, SD=0.91) have a correlation of 0.37 with an effect size of Cohen's *d~rm,pooled~* = -0.26 (Lakens, 2013, formula 8, computed in this [link](https://www.psychometrica.de/effect_size.html); the manipulation did not work as it should have; there is an adverse effect).

The ACCs of the low (M=0.87, SD=0.15) and high loads (M=0.89, SD=0.16) have a correlation of 0.68 with an effect size of Cohen's *d~rm,pooled~* = -0.20 (the manipulation did not work as it should have; there is an adverse effect).

### Some interpretations

Some reversed results are observed. It might be practice effects, where participants did more poorly on first trials than on second trials.

## RQ 2. Is working memory affected by changes in spacing?

To answer this question, I will conduct an ANOVA with 2 working memory load difficulty x 2 types x 3 spacing conditions as factors in the second dual-task condition. The working memory task will likely interfere with the arithmetic task with no differences in accuracy and response times between types and with lower accuracy and slower response times in high vs. low load. There should be a lower accuracy and slower response times for incongruent than congruent trials.

```{r}
dat.2 <- dat %>%
  filter(display=="expression",
       task=="Arithmetic With Spacing",
       exprType=="experimental") %>%
  group_by(id1,load,wmLoad,spCond) %>%
  mutate(wmLoad=ifelse(wmLoad=="low_p"|wmLoad=="high_p","p","v")) %>%
  summarize(log_rt=mean(log_rt, na.rm=TRUE),
            acc=mean(acc),
            rt=mean(rt, na.rm=TRUE))

a <- ggplot(dat.2, aes(x=load, y=rt)) + 
  geom_boxplot()
b <- ggplot(dat.2, aes(x=load, y=log(rt))) + 
  geom_boxplot()
c <- ggplot(dat.2, aes(x=load, y=acc)) + 
  geom_boxplot()


plots <- ggarrange(a, b, c,
          labels = c("A", "B", "C"),
          ncol =3, nrow = 1)
plots

dat.2$load <- factor(dat.2$load)
dat.2$wmLoad <- factor(dat.2$wmLoad)
dat.2$spCond <- factor(dat.2$spCond)
dat.2$id1 <- factor(dat.2$id1)

dat.2 %>%
  select(id1, wmLoad,load,rt,acc) %>%
  psych::describeBy(group="load")


```

### Main Effect of Load

```{r}
dat.2.1 <- dat.2 %>%
  group_by(id1,load) %>%
  summarize(log_rt=mean(log_rt, na.rm=TRUE),
            acc=mean(acc),
            rt=mean(rt, na.rm=TRUE))

aov.1 <- aov(rt~load + Error (id1/load), data=dat.2.1)
summary(aov.1)

aov.2 <- aov(log(rt)~load + Error (id1/load), data=dat.2.1)
summary(aov.2)

aov.3 <- aov(acc~load + Error (id1/load), data=dat.2.1)
summary(aov.3)


```

### Main Effect of WM Type

```{r}
dat.2.2 <- dat.2 %>%
  group_by(id1,wmLoad) %>%
  summarize(log_rt=mean(log_rt, na.rm=TRUE),
            acc=mean(acc),
            rt=mean(rt, na.rm=TRUE))

aov.1 <- aov(rt~wmLoad + Error (id1/wmLoad), data=dat.2.2)
summary(aov.1)

aov.2 <- aov(log(rt)~wmLoad + Error (id1/wmLoad), data=dat.2.2)
summary(aov.2)

aov.3 <- aov(acc~wmLoad + Error (id1/wmLoad), data=dat.2.2)
summary(aov.3)
```

### Main Effect of Spacing

```{r}
dat.2.3 <- dat.2 %>%
  group_by(id1,spCond) %>%
  summarize(log_rt=mean(log_rt, na.rm=TRUE),
            acc=mean(acc),
            rt=mean(rt, na.rm=TRUE))

aov.1 <- aov(rt~spCond + Error (id1/spCond), data=dat.2.3)
summary(aov.1)

aov.2 <- aov(log(rt)~spCond + Error (id1/spCond), data=dat.2.3)
summary(aov.2)

aov.3 <- aov(acc~spCond + Error (id1/spCond), data=dat.2.3)
summary(aov.3)
```

### Interaction Effects

```{r}
#| echo: false
dat.2.4 <- dat.2%>%
  group_by(spCond,load) %>%
  summarize(acc=mean(acc,na.rm=TRUE),
            rt=mean(rt,na.rm=TRUE),
            log_rt=mean(log_rt,na.rm=TRUE))
a <- ggplot(dat.2.4, aes(x=spCond, y=acc, fill=load, group=load)) + 
  geom_bar(stat="identity", position=position_dodge()) 
a

a <- ggplot(dat.2, aes(x=spCond, y=acc, colour=load, group=load)) + 
  stat_summary(fun.y = mean, geom = "point") +
  stat_summary(fun.y = mean, geom = "line")
a

```

## RQ 3. Do perceptual cues such as parenthesis influence the interaction between spacing and working memory?

To answer this question, I will also conduct an ANOVA with 2 working memory load difficulties x 2 type x 3 spacing conditions as factors on the third dual-task condition. The working memory task will likely interfere with the arithmetic task with no differences between types and with more significant interference in high vs. low load. Because we expect parentheses to overcome the effect of incongruent spacing, there should be no difference between spacing conditions within each load and type (i.e., the spacing effect is weaker).

```{r}

dat.3 <- dat %>%
  filter(display=="expression",
       task=="Arithmetic With Parens",
       exprType=="experimental") %>%
  group_by(id1,load,wmLoad,spCond) %>%
  mutate(wmLoad=ifelse(wmLoad=="low_p"|wmLoad=="high_p","p","v")) %>%
  summarize(log_rt=mean(log_rt, na.rm=TRUE),
            acc=mean(acc),
            rt=mean(rt, na.rm=TRUE))
# 
# dat.3 %>%
#   group_by(wmLoad,load) %>%
#   summarize(n=n())



```

```{r}
#| echo: false
a <- ggplot(dat.3, aes(x=load, y=rt)) + 
  geom_boxplot()
b <- ggplot(dat.3, aes(x=load, y=log(rt))) + 
  geom_boxplot()
c <- ggplot(dat.3, aes(x=load, y=acc)) + 
  geom_boxplot()


plots <- ggarrange(a, b, c,
          labels = c("A", "B", "C"),
          ncol =3, nrow = 1)
plots

dat.3$load <- factor(dat.3$load)
dat.3$wmLoad <- factor(dat.3$wmLoad)
dat.3$spCond <- factor(dat.3$spCond)
dat.3$id1 <- factor(dat.3$id1)

dat.3 %>%
  select(id1, wmLoad,load,rt,acc) %>%
  psych::describeBy(group="load")


```

### Main Effect of Load

```{r}
dat.3.1 <- dat.3 %>%
  group_by(id1,load) %>%
  summarize(log_rt=mean(log_rt, na.rm=TRUE),
            acc=mean(acc),
            rt=mean(rt, na.rm=TRUE))

aov.1 <- aov(rt~load + Error (id1/load), data=dat.3.1)
summary(aov.1)

aov.2 <- aov(log(rt)~load + Error (id1/load), data=dat.3.1)
summary(aov.2)

aov.3 <- aov(acc~load + Error (id1/load), data=dat.3.1)
summary(aov.3)


```

### Main Effect of WM Type

```{r}
dat.3.2 <- dat.3 %>%
  group_by(id1,wmLoad) %>%
  summarize(log_rt=mean(log_rt, na.rm=TRUE),
            acc=mean(acc),
            rt=mean(rt, na.rm=TRUE))

aov.1 <- aov(rt~wmLoad + Error (id1/wmLoad), data=dat.3.2)
summary(aov.1)

aov.2 <- aov(log(rt)~wmLoad + Error (id1/wmLoad), data=dat.3.2)
summary(aov.2)

aov.3 <- aov(acc~wmLoad + Error (id1/wmLoad), data=dat.3.2)
summary(aov.3)
```

### Main Effect of Spacing

```{r}
dat.3.3 <- dat.3 %>%
  group_by(id1,spCond) %>%
  summarize(log_rt=mean(log_rt, na.rm=TRUE),
            acc=mean(acc),
            rt=mean(rt, na.rm=TRUE))

aov.1 <- aov(rt~spCond + Error (id1/spCond), data=dat.3.3)
summary(aov.1)

aov.2 <- aov(log(rt)~spCond + Error (id1/spCond), data=dat.3.3)
summary(aov.2)

aov.3 <- aov(acc~spCond + Error (id1/spCond), data=dat.3.3)
summary(aov.3)
```

### Interaction Effects

```{r}
aovx <- aov(acc~spCond*load*wmLoad + Error (id1/(spCond*load*wmLoad)), data=dat.3)
summary(aovx)

```

```{r}
#| echo: false
dat.3 <- dat.3%>%
  group_by(spCond,load) %>%
  summarize(acc=mean(acc,na.rm=TRUE),
            rt=mean(rt,na.rm=TRUE),
            log_rt=mean(log_rt,na.rm=TRUE))
a <- ggplot(dat.3, aes(x=spCond, y=acc, fill=load, group=load)) + 
  geom_bar(stat="identity", position=position_dodge()) 
a

a <- ggplot(dat.3, aes(x=spCond, y=acc, colour=load, group=load)) + 
  stat_summary(fun.y = mean, geom = "point") +
  stat_summary(fun.y = mean, geom = "line")
a

a <- ggplot(dat.3, aes(x=spCond, y=log_rt, color=load, group=load)) + 
  stat_summary(fun.y = mean, geom = "point") +
  stat_summary(fun.y = mean, geom = "line")
a

```

## Parenthesis vs. no parenthesis visuals

### Spacing effect and load by task

There is one significant interaction on `acc`: `spCond*task`. There are main effects of `spCond` & `task` .

```{r}
dat.4 <- dat %>%
  filter(display=="expression",
       task!="Arithmetic No Spacing",
       exprType=="experimental") %>%
  group_by(id1,task,load,wmLoad,spCond) %>%
  mutate(wmLoad=ifelse(wmLoad=="low_p"|wmLoad=="high_p","p","v")) %>%
  summarize(log_rt=mean(log_rt, na.rm=TRUE),
            acc=mean(acc),
            rt=mean(rt, na.rm=TRUE))

aovx <- aov(acc~spCond*load*task + Error (id1/(spCond*load*task)), data=dat.4)
summary(aovx)

# cannot do rt because not everyone had values in all 12 conditions
```

```{r}
#| echo: false
a <- ggplot(dat.4, aes(x=spCond, y=log_rt, color=load, group=load)) + 
  stat_summary(fun.y = mean, geom = "point") +
  stat_summary(fun.y = mean, geom = "line")
a + facet_wrap(~task)

a <- ggplot(dat.4, aes(x=spCond, y=rt, color=load, group=load)) + 
  stat_summary(fun.y = mean, geom = "point") +
  stat_summary(fun.y = mean, geom = "line")
a + facet_wrap(~task)

a <- ggplot(dat.4, aes(x=spCond, y=acc, color=load, group=load)) + 
  stat_summary(fun.y = mean, geom = "point") +
  stat_summary(fun.y = mean, geom = "line")
a + facet_wrap(~task)

```
